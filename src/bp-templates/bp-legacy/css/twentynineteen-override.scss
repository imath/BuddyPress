//
//------------------------------------------------------------------------------
// BuddyPress scss Variables
//------------------------------------------------------------------------------
//

$pad-xsml: 0.3em !default;
$pad-sml:  0.5em !default;
$pad-med:  1em !default;
$pad-lrg:  2em !default;
$pad-xlrg: 4em !default;

$marg-xsml: 5px !default;
$marg-sml:  10px !default;
$marg-med:  15px !default;
$marg-lrg:  20px !default;
$marg-xlrg: 30px !default;

// Colours

$dark-grey:            #555 !default;
$light-text:           #767676 !default; // lightest gray on #fff with 4.5:1 contrast ratio
$light-text-plus:      #737373 !default; // $light-text on #fafafa background
$primary-grey:         #ccc !default;
$light-grey:           #eaeaea !default;
$med-light-grey:       #d6d6d6 !default;
$blue:                 #5087e5 !default;
$black:                #333 !default;
$grey:                 $primary-grey !default;
$golden:               #edbb34 !default;

$highlight:            $blue !default; // for various elements such as span qnt indications
$text-link-hover:      #5087e5 !default;
$text-link-visited:    $med-light-grey !default;
$bp-border-color:      #eee !default;
$bp-border-dark:       $primary-grey !default;
$buttons-background:   #ededed !default;
$off-white:            #fafafa !default;
$white:                #fff !default;
$form-border-color:    $med-light-grey !default;
$bp-text:              $dark-grey !default;
$form-text:            $light-text-plus !default;
$primary-headings:     $light-text !default;
$textarea-bck:         $white !default;
$meta-text:            $light-text-plus !default;
$meta-text-dark:       $dark-grey !default;
$focussed-border-clr:  rgba(31, 179, 221, 0.9) !default; // textareas? e.g whats-new

// Message colors

// used on text == red & input validation pseudo classes
$warn:           #b71717 !default;
$valid:          #91cc2c !default;

// The colors for boxes
$warnings:       #d33 !default;
$informational:  #0b80a4 !default;
$loading:        #ffd087 !default;
$update-success: #8a2 !default;

// password warn colors & border-short
// These may be overidden on the @include mixin call
$pwd-background:    #eee !default;
$background-short:  #ffa0a0 !default;
$border-short:      #f04040 !default;
$background-good:   #ffec8b !default;
$border-good:       #fc0 !default;
$background-strong: #66d66e !default;
$border-strong:     #438c48 !default;
$background-bad:    #ffb78c !default;
$border-bad:        #ff853c !default;

// Animation loader-pulsate border / shadow colors

$border-color-from:        #aaa !default;
$border-color-to:          #ccc !default;
$shadow-color-from:        #ccc !default;
$shadow-color-to:          #f8f8f8 !default;

// BP Tooltips

$tooltip-background:        $white !default;
$tooltip-border:            $light-text-plus !default;
$tooltip-border-radius:     1px !default;
$tooltip-box-shadow:        4px 4px 8px rgba(0, 0, 0, 0.2) !default; // 1px 1px 0 1px rgba(132, 132, 132, 0.3) !default;
$tooltip-font-family:       "Helvetica Neue", helvetica, arial, san-serif;
$tooltip-font-size:         12px !default;
$tooltip-font-weight:       400 !default;
$tooltip-max-width:         200px !default;
$tooltip-padding-hor:       8px !default;
$tooltip-padding-vert:      5px !default;
$tooltip-text-color:        $black !default;
$tooltip-tip-area:          7px !default; // bp-tooltip arrow's height, width, & margin
$tooltip-tip-background:    $white !default;
$tooltip-z-index:           100000 !default;


//
//------------------------------------------------------------------------------
// BuddyPress scss Mixins
//------------------------------------------------------------------------------
//

@mixin font-size($font-size: 16) {
	$rem-font-value: ($font-size / 10);
	font-size: ($font-size * 1px);
}


// The following Sass map handles some basic re-sizing of BP fonts.
// Sizes are set to change on the medium breakpoint.
// It is hard for BP to know what the theme is doing so we are
// limited in what we can do here.
// The dev can feed a value to the mixin which will then be calculated
// below to find a reduced size.

@mixin responsive-font($res-size: 16) {

	$the-sizes: $res-size;

	$small: round(($the-sizes / 1.2));
	$larger: $the-sizes;

	$the-sizes: (
		null:   $small,
		46.8em: $larger
	);

	@each $font-breakpoint, $resonsive-font-size in $the-sizes {

		@if $font-breakpoint == null {
			font-size: $resonsive-font-size + px;
		} @else {

			@media screen and (min-width: $font-breakpoint) {
				font-size: $resonsive-font-size + px;
			}
		}
	}

}

// Essential em based breakpoints
// mixin wraps rulesets or properties.
// written as:
// @include medium-up() {
//  body {property: value;}
// }


@mixin small-up {

	@media screen and (min-width: 24em) {

		@content;
	}
}

@mixin medium-small-max {

	@media screen and (max-width: 32em) {

		@content;
	}
}

@mixin medium-small-up {

	@media screen and (min-width: 32em) {

		@content;
	}
}

@mixin medium-max {

	@media screen and (max-width: 46.8em) {

		@content;
	}
}

@mixin medium-up {

	@media screen and (min-width: 46.8em) {

		@content;
	}
}

@mixin medium-lrg-up {

	@media screen and (min-width: 55em) {

		@content;
	}
}

@mixin large-up {

	@media screen and (min-width: 75em) {

		@content;
	}
}

// 'clearfix-element' allows us to pass an element, class or id to the mixin.
// Use where we need to have float containment and where getting to
// the physical element to add a class of 'clearfix' is problematic.

@mixin clearfix-element($item) {

	#{$item}:before,
	#{$item}:after {
		content: " ";
		display: table;
	}

	#{$item}:after {
		clear: both;
	}

}

// These two mixins add hide/show properties for clicked/focussed elements.
// They may be added to existing rulesets or added to a class selector
// rulesets to use hardcoded to template markup.

// Convenience helper to add hide properties to rulesets

@mixin hide() {
	display: none;
}

// companion mixins properties for showing the element for :focus/:hover
// or via JS added hooks.

@mixin show() {
	height: auto;
	left: 0;
	overflow: visible;
	position: static;
	top: 0;
}

// Box model - defaults to value 'border-box'
// Vendor prefixes are pretty much redundant for this property,
// consider removing

@mixin box-model($box-type: null) {

	@if $box-type {
		// if a param was passed through
		$box-type: $box-type;
	} @else {
		$box-type: border-box;
	}

	-webkit-box-sizing: $box-type;
	-moz-box-sizing: $box-type;
	box-sizing: $box-type;
}

// Border radius

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;
}

@mixin border-top-radius($radius) {
	-webkit-border-top-right-radius: $radius;
	border-top-right-radius: $radius;
	-webkit-border-top-left-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}

@mixin border-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	border-bottom-right-radius: $radius;
	-webkit-border-top-right-radius: $radius;
	border-top-right-radius: $radius;
	background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	border-bottom-right-radius: $radius;
	-webkit-border-bottom-left-radius: $radius;
	border-bottom-left-radius: $radius;
	background-clip: padding-box;
}

@mixin border-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
	border-bottom-left-radius: $radius;
	-webkit-border-top-left-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}

// very basic box-shadow mixin  - this needs to be
// updated & improved

@mixin box-shadow($values...) {
	-webkit-box-shadow: $values;
	-moz-box-shadow: $values;
	box-shadow: $values;
}

// There can be a need to override the themes global styles
// Provide a box-shadow: none;

@mixin box-shadow-none() {
	-moz-box-shadow: none;
	-webkit-box-shadow: none;
	box-shadow: none;
}

// Calc e.g (100% - 10px)

@mixin calc($property, $expression) {
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: -moz-calc(#{$expression});
	#{$property}: calc(#{$expression});
}

// Flexbox Mixins

// Set display to box flex & set the direction and wrapping behavior
// shorthand for flex-direction & flex wrap - default ( row wrap )

@mixin flex-box-dir($flex-dir: "row", $flex-wrap: "nowrap") {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
	display: flex;
	-webkit-flex-flow: unquote($flex-dir) unquote($flex-wrap);
	-moz-flex-flow: unquote($flex-dir) unquote($flex-wrap);
	-ms-flex-flow: unquote($flex-dir) unquote($flex-wrap);
	-o-flex-flow: unquote($flex-dir) unquote($flex-wrap);
	flex-flow: unquote($flex-dir) unquote($flex-wrap);
}

// align child items
// flex-start | flex-end | center | baseline | stretch (default)

@mixin flex-align($align: stretch) {
	-ms-flex-align: $align; //older?
	-webkit-align-items: $align;
	-webkit-box-align: $align; // old
	align-items: $align; // current specs
}

// Box-order  - shuffle item order for columns

@mixin box-order($box-order-number: 1) {
	-webkit-box-order: $box-order-number;
	-moz-order: $box-order-number;
	-ms-order: $box-order-number;
	-o-order: $box-order-number;
	order: $box-order-number;
}

// shorthand: flex-grow, flex-shrink, flex-basis for child items
// defaults 0 | 1 | auto

@mixin box-item-size($grow: 0, $shrink: 1, $basis: auto) {
	-webkit-flex: $grow $shrink $basis;
	-moz-flex: $grow $shrink $basis;
	-ms-flex: $grow $shrink $basis;
	-o-flex: $grow $shrink $basis;
	flex: $grow $shrink $basis;
}

// Vertical centering - all in one, this is a
// fixed mixin for one result/requirement.
// This class allows us to center child elements
// using flexbox. This is a progressive enhancement,
// it won't work in all browsers, older browser will simply
// fall back to non centered or using older techniques.
// N.B It would be preferable to remove the older property syntax

@mixin center-vert() {
	display: -webkit-box; // older
	display: -ms-flexbox; // older
	display: -webkit-flex; // current prefix
	display: flex; // current specs
	-ms-flex-align: center; //older?
	-webkit-align-items: center;
	-webkit-box-align: center; // old
	align-items: center; // current specs
}

// Layout elements / lists as grids
// A combined mixin to set flex-flow & flex.
// This mixin must be called on the parent i.e 'ul'

@mixin build-flex-layout($row-wrap: wrap, $align: stretch, $basis: auto, $grow: 0 ) {

	@include flex-box-dir($flex-dir: "row", $flex-wrap: $row-wrap);
	@include flex-align($align: $align);

	> * {

		@include box-item-size($grow: $grow, $shrink: 1, $basis: $basis);
	}
}

// Links as a tabbed effect.
// Renders links in a horizontal layout as a
// tab effect on the current selected links.

@mixin tabbed-links() {

	.tabbed-links {

		ul,
		ol {
			border-bottom: 1px solid $bp-border-dark;
			float: none;
			margin: $marg-lrg 0 $marg-sml;

			&:before,
			&:after {
				content: " ";
				display: block;
			}

			&:after {
				clear: both;
			}

			li {
				float: left;
				list-style: none;
				margin: 0 $marg-sml 0 0;

				a,
				span:not(.count) {
					background: none;
					border: none;
					display: block;
					padding: 4px 10px;
				}

				a:focus,
				a:hover {
					background: none;
				}
			}

			li:not(.current) {
				margin-bottom: 2px;
			}

			li.current {
				border-color: $bp-border-dark $bp-border-dark #fff;
				border-style: solid;
				border-top-left-radius: 4px;
				border-top-right-radius: 4px;
				border-width: 1px;
				margin-bottom: -1px;
				padding: 0 $pad-sml 1px;

				a {
					background: none;
					color: $black;
				}
			}
		}
	}

	// we don't want top margin if tabs are on the top subnav position
	.bp-subnavs.tabbed-links > ul {
		margin-top: 0;
	}
}

// Provides the properties to style vert navs in a visual tab style.
// This allows rulesets to be applied without having to re-write.
// e.g dir-navs use this in _bp_layouts.scss if the navs tabs class set.

@mixin primary-navs-vert-tabs() {

	ul {

		li:not(.selected) {

			a:hover,
			a:focus {
				background: none;
			}
		}

		li.selected {
			background: none;
			border: 1px solid $med-light-grey;
			border-right-color: #fff;

			a {
				background: none;
				color: $black;
				font-weight: 600;

				span {
					background: $dark-grey;
					border: 1px solid $med-light-grey;
					color: $white;
				}
			}
		}

	}
}

// BP message boxes

// BP message boxes
// Creates a message box with border, background color
// If  no text-color passed in then the background used for
// text is darkened by 50%.
@mixin message-box($background: #fff, $text-color: null, $border: null) {

	@if $text-color {
		// if a param was passed through
		$text-color: $text-color;
	} @else {
		$text-color: darken($background, 50%);
	}

	background: $background;

	@if $border != none {

		@if $border {
			border: $border;
		} @else {
			border: 1px solid darken($background, 10%);
		}
	}

	color: $text-color;
}

// Password warn colors

@mixin pwd-bad-colors($color: inherit, $background: null, $border: null) {

	@if $background {
		$background: $background;
	} @else {
		$background: $background-bad;
	}

	background-color: $background;

	@if $border {
		$border: $border;
	} @else {
		$border: $border-bad;
	}

	border-color: $border;

	color: $color;
}

@mixin pwd-short-colors($color: inherit, $background: null, $border: null) {

	@if $background {
		$background: $background;
	} @else {
		$background: $background-short;
	}

	background-color: $background;

	@if $border {
		$border: $border;
	} @else {
		$border: $border-short;
	}

	border-color: $border;

	color: $color;
}

@mixin pwd-good-colors($color: inherit, $background: null, $border: null) {

	@if $background {
		$background: $background;
	} @else {
		$background: $background-good;
	}

	background-color: $background;

	@if $border {
		$border: $border;
	} @else {
		$border: $border-good;
	}

	border-color: $border;

	color: $color;
}

@mixin pwd-strong-colors($color: inherit, $background: null, $border: null) {

	@if $background {
		$background: $background;
	} @else {
		$background: $background-strong;
	}

	background-color: $background;

	@if $border {
		$border: $border;
	} @else {
		$border: $border-strong;
	}

	border-color: $border;

	color: $color;
}

// BP Tooltips

// Bottom center tooltip - Default

@mixin bp-tooltip-default {

	&:after {
		left: 50%;
		margin-top: $tooltip-tip-area;
		top: 110%;
		-webkit-transform: translate(-50%, 0);
		-ms-transform: translate(-50%, 0);
		transform: translate(-50%, 0);
	}

}

// Bottom left tooltip

@mixin bp-tooltip-bottom-left {

	&:after {
		left: 0;
		-webkit-transform: translate(0, 0);
		-ms-transform: translate(0, 0);
		transform: translate(0, 0);
	}

}

// Bottom right tooltip

@mixin bp-tooltip-bottom-right {

	&:after {
		left: auto;
		right: 0;
		-webkit-transform: translate(0, 0);
		-ms-transform: translate(0, 0);
		transform: translate(0, 0);
	}

}

// Top center tooltip

@mixin bp-tooltip-top {

	&:after {
		bottom: 110%;
		left: 50%;
		margin-bottom: $tooltip-tip-area;
		margin-top: 0;
		top: auto;
		-webkit-transform: translateX(-50%);
		-ms-transform: translateX(-50%);
		transform: translateX(-50%);
	}

}

// Top left tooltip

@mixin bp-tooltip-top-left {

	&:after {
		bottom: 110%;
		left: 0;
		margin-bottom: $tooltip-tip-area;
		margin-top: 0;
		top: auto;
		-webkit-transform: translateX(0);
		-ms-transform: translateX(0);
		transform: translateX(0);
	}

}

// Top right tooltip

@mixin bp-tooltip-top-right {

	&:after {
		bottom: 110%;
		left: auto;
		margin-bottom: $tooltip-tip-area;
		margin-top: 0;
		right: 0;
		top: auto;
		-webkit-transform: translateX(0);
		-ms-transform: translateX(0);
		transform: translateX(0);
	}

}

// Left tooltip

@mixin bp-tooltip-left {

	&:after {
		bottom: 50%;
		left: auto;
		margin-right: 10px;
		margin-top: 0;
		right: 100%;
		top: auto;
		-webkit-transform: translate(0, 50%);
		-ms-transform: translate(0, 50%);
		transform: translate(0, 50%);
	}

}

// Right tooltip

@mixin bp-tooltip-right {

	&:after {
		bottom: 50%;
		left: 100%;
		margin-left: 10px;
		margin-top: 0;
		top: auto;
		-webkit-transform: translate(0, 50%);
		-ms-transform: translate(0, 50%);
		transform: translate(0, 50%);
	}

}

/*-----------------------------------------------------------------
Hello, this is the Twenty Nineteen BuddyPress Companion stylesheet.

@version 5.0.0

-------------------------------------------------------------------
>>> TABLE OF CONTENTS:
-------------------------------------------------------------------
1.0 - BP Generic, Typography & Imagery

2.0 - Navigation - General
	2.1 - Navs - Object Nav / Sub Nav (item-list-tabs)
	2.2 - Pagination

3.0 - BP Lists / Loops Generic & filters
	3.1 - Activity Loop
		3.1.1 Whats New Activity
		3.1.2 - Activity Entries
		3.1.3 - Activity Comments
	3.2 - Blogs Loop
	3.3 - Groups Loop
	3.4 - Members Loop

4.0 - Directories - Members, Groups, Blogs, Register, Activation
	4.1 - Groups Creation Steps Screens
5.0 - Single Item screens: User Account & Single Group Screens
	5.1 - Item Headers: Global
		5.1.1 - item-header: Groups
		5.1.2 - item-header: User Accounts
	5.2 - Item Body: Global
		5.2.1 - item-body: Groups
			5.2.1.1 - Management settings screens
			5.2.1.2 - Group Members list
			5.2.1.3 - Group Invite list
			5.2.1.4 - Group Activity
		5.2.2 - item-body: User Accounts
			5.2.2.1 - classes, pag, filters
			5.2.2.2 - Extended Profiles
			5.2.2.3 - Groups
			5.2.2.4 - friends
			5.2.2.5 - Private Messaging Threads
			5.2.2.6 - Settings

6.0 - Forms  -  General
	6.1 - Dir Search

7.0 - Tables -  General

8.0 - Classes - Messages, Ajax, Widgets, Buttons, Tooltips

9.0 - Layout Classes.
-----------------------------------------------------------------*/

/**
*-------------------------------------------------------------------------------
* @section 1.0 - BP Generic, Typography & Imagery
*-------------------------------------------------------------------------------
*/

// ========= Generic Sitewide elements ========
body {

	#buddypress { // needs the weight of the id here

		* {
			// some WP themes add anchor border bottom :(
			a {
				box-shadow: none;
				text-decoration: none;
			}
		} // close * the kitchen sink of elements

		// 'Boxes' i.e display:block when given definition with borders
		// look nice if corners subtly rounded by a couple of pixels
		div,
		dl,
		li,
		textarea,
		select,
		input[type="search"],
		input[type="submit"],
		input[type="reset"] {

			@include border-radius(2px);
		}


		// Some themes have a negative left margin on the blockquote element??
		#item-body,
		ul.item-list {

			blockquote {
				margin-left: 0;
			}
		}

		ul.item-list .action {

			@include box-model();
		}

		.bp-label-text,
		.message-threads {

			@include responsive-font(16);
		}

		.activity-header {

			@include responsive-font(16);
		}

		.activity-inner {

			@include responsive-font(18);
		}

		#whats-new-post-in {

			@include font-size(16);
		}

		.mini .activity-header,
		.acomment-meta {

			@include font-size(16);
		}

		#activity-filter-by {

			@include responsive-font(16);
		}

		$search-element-size: 15;
		$search-element-button-size: $search-element-size + 5;

		table.notifications,
		table.notifications-settings,
		table.profile-settings,
		table.profile-fields,
		table.wp-profile-fields,
		table.messages-notices {

			th {

				@include responsive-font(16);
			}

			td {

				@include responsive-font(14);
			}
		}

		// Setting the profile fields to be a larger
		// font than all general user tables is open for review.
		.profile-fields {

			th {

				@include responsive-font(18);
			}

			td {

				@include responsive-font(16);
			}
		}

		#notification-select {

			@include responsive-font(14);
		}
	}
}

// Some themes have very restricted content widths for pages
// or entry-content (2013, 2014, 2017) Lets adjust these restrictions
body.buddypress {

	@include medium-up() {

		.entry-header,
		.site-content .entry-header,
		.entry-content {
			max-width: none;
		}

		.entry-header {
			float: none;
			max-width: none;
		}

		.entry-content,
		.entry .entry-content > * {
			float: none;
			max-width: none;
		}

		.site-content {
			padding-top: 2.5em;
		}

		#page {

			#primary {
				max-width: none;

				.entry-header,
				.entry-content {
					float: none;
					width: auto;
				}
			}
		}
	} // @media
}

body.buddypress {

	article.page {

		> .entry-header {
			margin-bottom: 2em;
			padding: 0;

			.entry-title {

				@include responsive-font(34);
				font-weight: inherit;
				color: $primary-headings;
			}
		}
	}
}

/**
*----------------------------------------------------------
* @section 2.1 - Navs Object Nav / Sub Nav (bp-list)
*
* The main navigational elements for all BP screens
*----------------------------------------------------------
*/

#buddypress .item-list-tabs {
	background: transparent;
	clear: both;
	overflow: hidden;

	ul {
		margin: 0;
		padding: 0;

		li {
			list-style: none;
			margin: 0;
		}

		li.last {

			select {
				max-width: 185px;
			}
		}

		li {

			a,
			span {
				border: 0;
				display: block;
				padding: 5px 10px;
				text-decoration: none;
			}

			.count {
				background: $light-grey;
				border: 1px solid $bp-border-dark;
				border-radius: 50%;
				color: $meta-text-dark;
				display: inline;

				@include font-size(12);
				margin-left: 2px;
				padding: 3px 6px;
				text-align: center;
				vertical-align: middle;
			}
		}

		// these selected/current should apply to all navs
		// if not pull out & move to end.
		li.selected,
		li.current {

			a {
				color: $black;
				opacity: 1;
			}
		}

	} // close ul

} // close .item-list-tabs

body.buddypress.directory {
	margin-bottom: $marg-lrg;
}

#buddypress {

	// position our nav elements at larger screen widths

	@include medium-up() {

		.item-list-tabs {

			li { // set the list links of all navs to shrinkwrap/width auto
				float: left;
			}
		}

		#subnav {
			float: left;

			ul {
				width: auto;
			}
		}

		// user screen last filter
		#subsubnav {

			.filter {
				float: right;
			}
		}

	} // close @media

} // close #buddypress

body.buddypress.directory #buddypress {

	.last { // li

		label {
			display: inline;
		}
	}
}

body.buddypress.single-item #buddypress {

	#subnav {
		background: none;
		list-style: none;
		margin: $marg-med 0 0;
		padding: 0;

		div {
			margin: 0;
		}

		> ul {
			float: left;
			list-style: none;
		}

		div {
			float: none;

			select,
			input[type="search"] {

				@include font-size(16);
			}

			#members_search_submit {
				padding: 5px 0.8em 6px;
			}
		}
	}
}

/**
*----------------------------------------------------------
* @section 2.2 - Pagination
*----------------------------------------------------------
*/

#buddypress {

	.dir-list {
		background: transparent;
		border: 0;
		color: $light-text;
		float: left;
		font-size: small;
		margin: 0;
		padding: $pad-sml 0;
		position: relative;
		width: 100%;

		.pag-count {
			float: left;
		}

		.pagination-links {
			float: right;
			margin-right: $marg-sml;

			span,
			a {
				font-size: small;
				padding: 0 5px;
			}

		}

		.pagination-links {

			a:focus,
			a:hover {
				opacity: 1;
			}
		}

		p {
			margin: 0;
		}

	} // close .dir-list
}
